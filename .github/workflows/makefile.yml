name: Auto Kernel Builer
on:
   push:
      branches: [main,ksu]
   workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - branch: 'main'
            config: 'evergo_defconfig'
            config_label: 'default'
          - branch: 'ksu'
            config: 'evergo_defconfig'
            config_label: 'default'
          - branch: 'ksu'
            config: 'evergo_docker_defconfig'
            config_label: 'docker'
      fail-fast: false
    timeout-minutes: 45
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_MAXSIZE: 20G
      ARCH: arm64
      SUBARCH: arm

    steps:
    - name: Checkout ${{ matrix.branch }} branch Code
      uses: actions/checkout@v4
      with:
        ref: ${{ matrix.branch }}

    - name: Install Dependencies & toolchain
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          clang \
          lld \
          libssl-dev \
          libelf-dev \
          flex \
          bison \
          bc \
          ccache \
          curl \
          git \
          git-lfs \
          gnupg \
          gperf \
          imagemagick \
          liblz4-tool \
          libncurses6 \
          libncurses5-dev \
          libsdl1.2-dev \
          libxml2 \
          libxml2-utils \
          lzop \
          pngcrush \
          rsync \
          schedtool \
          squashfs-tools \
          xsltproc \
          zip \
          zlib1g-dev \
          gcc-aarch64-linux-gnu
   
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: Configure ccache
      run: |
        mkdir -p $CCACHE_DIR
        echo "max_size = $CCACHE_MAXSIZE"
        sudo chmod -R 777 $CCACHE_DIR

    - name: Restore ccache
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: kernel-ccache-${{ runner.os }}-${{ env.ARCH }}-${{ matrix.branch }}-${{ matrix.config }}
    
    - name: Initialize KernelSU
      if: ${{ matrix.branch == 'ksu' }}
      run: |
        git submodule init
        git submodule update
    
    - name: Build Kernel (ARM64 Cross-Compile)
      run: |
        make -j32 O=out \
          CC="ccache clang" \
          LD=ld.lld \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_COMPAT=aarch64-linux-gnueabi- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
          LLVM_IAS=1 \
          KCFLAGS="--target=aarch64-linux-gnu \
                   -Wno-unused-but-set-variable \
                   -Wno-implicit-function-declaration \
                   -Wno-unused-variable -Wno-unused-function -Wno-unused-label" \
          ${{ matrix.config }}

        make -j32 O=out \
          CC="ccache clang" \
          LD=ld.lld \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_COMPAT=aarch64-linux-gnueabi- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
          LLVM_IAS=1 \
          KCFLAGS="--target=aarch64-linux-gnu \
                   -Wno-unused-but-set-variable \
                   -Wno-implicit-function-declaration \
                   -Wno-unused-variable -Wno-unused-function -Wno-unused-label"

    - name: Package Kernel
      run: |
        git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git AnyKernel3
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        cd AnyKernel3

        sed -i 's/device\.name1=.*/device.name1=evergo/' anykernel.sh
        sed -i '/device\.name[2-5]=.*/d' anykernel.sh
        
        # 根据分支和配置类型设置内核字符串
        if [ "${{ matrix.branch }}" == "ksu" ]; then
          if [ "${{ matrix.config_label }}" == "docker" ]; then
            sed -i 's/kernel\.string=.*/kernel.string=Linux Kernel patched KernelSU and SUSFS 4.14.336 (Docker) by 酷安@孤独不能/' anykernel.sh
          else
            sed -i 's/kernel\.string=.*/kernel.string=Linux Kernel patched KernelSU and SUSFS 4.14.336 by 酷安@孤独不能/' anykernel.sh
          fi
        else
          sed -i 's/kernel\.string=.*/kernel.string=Linux Kernel 4.14.336 by 酷安@孤独不能/' anykernel.sh
        fi
        
        sed -i 's/BLOCK=.*/BLOCK=boot/' anykernel.sh
        sed -i 's/IS_SLOT_DEVICE=.*/IS_SLOT_DEVICE=auto/' anykernel.sh
        
        zip -r ../AnyKernel3-${{ matrix.branch }}-${{ matrix.config_label }}.zip *
        cd ..

    - name: Upload AnyKernel3.zip
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-${{ matrix.branch }}-${{ matrix.config_label }}.zip
        path: AnyKernel3-${{ matrix.branch }}-${{ matrix.config_label }}.zip

    - name: Save ccache
      uses: actions/cache/save@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: kernel-ccache-${{ runner.os }}-${{ env.ARCH }}-${{ matrix.branch }}-${{ matrix.config }}-${{ github.run_id }}